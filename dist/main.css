/* 
  fonts
*/

/* @font-face {
  font-family: 'Iosevka Curly';
  src: url(./assets/fonts/iosevka-curly.ttc) format('truetype');
} */

/* @font-face {
  font-family: 'FiraCode';
  src: url(./assets/fonts/FiraCode-Regular.ttf) format('truetype');
} */

/* variables */

:root {
  /* colors */
  --color1: #2AEDFF;
  --color2: #cf6d27;
  --color3: #eed69b;

  --debug-color: rgb(0, 196, 0);

  --cursor-background-color: rgb(240, 240, 255);
  --cursor-border-color: rgb(0, 0, 255);

  --select-background-color: rgb(202, 202, 255);

  --hover-background-color: rgb(250, 238, 255);
  --hover-border-color: rgb(179, 0, 255);

  --boundary-color: rgb(178, 0, 0);

  --it: 0.6em;
}

/*  html */

html,
body {
  margin: 0;
  padding: 0;
}

/* Panel */

.Panel {
  flex: 1 1 auto;

  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;

  box-shadow: 0 0 0 1px black;
  background-color: white;
}

.PanelHeader {
  padding: var(--it);
  width: calc(100% - 2*var(--it));
  height: calc(2 * var(--it));

  display: flex;
  flex-direction: row;
  gap: var(--it);
  justify-content: space-between;

  color: var(--color3);
  border-bottom: var(--it) solid var(--color2);
  background-color: black;
}

.PanelHeaderInfo {
  display: flex;
  flex-direction: row;
  gap: var(--it);
}

/* .PanelHeaderInfo>* {
  display: inline-block;
} */

.PanelHeaderInfo>.Title {
  color: var(--color1);
  font-weight: bold;
}

.PanelHeaderInfo>.Subtitle {
  color: var(--color2);
  font-weight: bold;
}

.PanelHeaderControl {
  display: flex;
  flex-direction: row;
  gap: var(--it);
}

.PanelContent {}

.PanelContentInterior {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;
}

/* EditorPanel */

.EditorPanel {
  width: 100vw;
  height: 100vh;

  font-family: 'Courier New', Courier, monospace;
}

.EditorPanel>.PanelContent {
  width: 100vw;
  height: calc(100vh - 2*var(--it));
  overflow: scroll;
}

.EditorPanel>.PanelContent>.PanelContentInterior {}

/* Buffer */

.BufferPanel {}

.BufferPanel>.PanelContent {
  height: 50vh;
  width: 100vw;
  overflow: scroll;
}

.BufferPanel>.PanelContent>.PanelContentInterior {}

.BufferPanel>.PanelContent>.PanelContentInterior>.Program {
  padding: var(--it);
  line-height: 1.1em;
}

/* TerminalPanel */

.TerminalPanel {
  height: calc(50vh - 10*var(--it));
}

.TerminalPanel>.PanelContent {
  width: 100vw;
  overflow: scroll;
}

.TerminalContent.closed {
  display: none;
}

.TerminalInput {
  display: block;
  width: calc(100vw - 2*var(--it));
  padding: var(--it);
}

.TerminalInput>input {
  display: block;
  padding: 0;
  margin: 0;
  border: none;
  border-radius: 0;
  user-select: none;
  box-shadow: 0 0 0 1px black;
  width: 100%;
}

.TerminalItems {
  display: flex;
  flex-direction: column;
  gap: var(--it);
  width: calc(100% - 2*var(--it));
  padding: var(--it);
}

.TerminalItem {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.TerminalItemTag {
  padding: 0 var(--it);
  height: fit-content;
  background-color: black;
  color: white;
  /* font-weight: bold; */
}

.DebugTerminalItemTag {
  color: var(--debug-color);
  /* box-shadow: 0 0 0 1px var(--debug-color); */
}

.TerminalItemContent {
  flex-grow: 1;
  padding: 0 var(--it);
  box-shadow: -1px 0 0 0 black;
  width: 100%;
}


/* Expr */

.Expr {
  display: inline;
  white-space: pre;
  cursor: pointer;
  user-select: none;
}

.Expr.Hover {
  background-color: var(--hover-background-color);
  box-shadow: -2px 0 0 0 var(--hover-border-color), 2px 0 0 0 var(--hover-border-color);
}

.Expr.beginsLine::before {
  /* content: '$' */
}

.Expr.validCursor::before {
  content: "*";
}

.ArrangeHtml {
  display: inline;
}

.Punctuation {
  display: inline;
  white-space: pre;
}

.Whitespace {
  color: rgba(0, 0, 0, 0);
  white-space: pre;
}

.Expr:hover>.ArrangeHtml>.Whitespace,
.Expr.OutsideCursor>.ArrangeHtml>.Whitespace,
.Expr.InsideCursor>.ArrangeHtml>.Whitespace,
.Expr.OutsideSelect .Whitespace {
  color: gray;
}

.Expr.InsideSelect .Whitespace {
  color: rgba(0, 0, 0, 0);
}

.Expr.OutsideCursor,
.Expr.OutsideCursor.Hover {
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

.Expr.InsideCursor,
.Expr.InsideCursor.Hover {
  border-radius: calc(0.5 * var(--it));
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}


.Expr.OutsideSelect {
  background-color: var(--select-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

.Expr.InsideSelect {
  background-color: white;
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

/* Toolbox */

.Toolbox {
  display: inline-block;
  position: relative;
}

.ToolboxInterior {
  position: absolute;
  top: 1.2em;
  background-color: rgb(217, 217, 217);
}

.ToolboxInput {
  padding: var(--it);
  font-size: 16px;
  border: none;
  outline: none;
  border-radius: 0;
  background-color: rgb(217, 217, 217);
}

.EditRows {}

.EditRow {}

.EditRow.SelectedEditRow {
  background-color: rgb(211, 255, 209);
}

.Edit {
  padding: var(--it);
}

.EditHole {
  display: inline;
  min-width: calc(2*var(--it));
  box-shadow: 0 0 0 1px var(--color2) inset;
  background-color: rgb(225, 225, 225);
}

.ToolboxExpr {}

.AdjacentEditClasp {
  display: inline;
  background-color: rgb(225, 225, 225);
}

/* Preview */

.Preview {
  display: inline;
  background-color: rgb(211, 255, 209);
}

.PreviewLeft {}

.PreviewLeftInsert {}

.PreviewLeftPaste {}

.PreviewRight {}


.PreviewRightInsert {}

.PreviewRightPaste {}

.PreviewLeftPaste+.Expr {
  background-color: rgb(255, 165, 165);
}

/* Sort */

.Sort {
  display: inline;
}

.Sort:hover {
  box-shadow: 0 0 0 4px var(--hover-border-color);
}

.VarSN {
  display: inline;
}

.SortTooth {
  display: inline;
}

.SortChange {
  display: inline;
}

.Change {
  display: inline;
}

.ShiftChange {
  background-color: rgb(169, 110, 0);
  padding: 0 calc(0.5*var(--it))
}

.ShiftChangeInner {
  display: inline;
  background-color: white;
  padding: 0 calc(0.5*var(--it))
}

.ReplaceChange {}

.InjectChange {}


/* StepExpr */

.StepExpr {
  /* display: inline; */
  display: inline-block;
}

.StepExprBoundaryInfo {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--boundary-color); */
  border: var(--it) solid var(--boundary-color);
}

.StepExprBoundary {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--boundary-color); */
  border: var(--it) solid var(--boundary-color);
  padding: 0 calc(0.5*var(--it));
}

.StepExprBoundaryDirection {
  /* display: inline; */
  display: inline-block;
  padding: 0 calc(0.5*var(--it));
  background-color: black;
  color: white;
}

.StepExprBoundaryChange {
  /* display: inline; */
  display: inline-block;
  padding: 0 var(--it);
}

.StepExprMarker {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--cursor-border-color); */
  border: var(--it) solid var(--cursor-border-color);
}

.StepExprBoundaryInfo:hover,
.StepExprBoundaryInfo:hover+.StepExprBoundary,
.StepExpr:hover {
  /* box-shadow: 0 0 0 4px var(--hover-border-color); */
  border: var(--it) solid var(--hover-border-color);
}

/* Html */

.Hole {
  color: gray;
  padding: 0 calc(0.5*var(--it));
}

.Inline {
  display: inline;
}

.Button {
  display: inline-block;
  padding: 0 calc(0.5*var(--it));
  user-select: none;
  cursor: pointer;

  color: var(--color2);
  box-shadow: 0 0 0 1px var(--color2);
  background-color: black;
}

.Button:hover {
  color: black;
  box-shadow: 0 0 0 1px black;
  background-color: var(--color2);
}