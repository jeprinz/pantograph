/* 
  fonts
*/

/* @font-face {
  font-family: 'Iosevka Curly';
  src: url(./assets/fonts/iosevka-curly.ttc) format('truetype');
} */

/* @font-face {
  font-family: 'FiraCode';
  src: url(./assets/fonts/FiraCode-Regular.ttf) format('truetype');
} */

/* 
  html
*/

html,
body {
  margin: 0;
  padding: 0;
  height: 100vh;
}

/* 
  .editor
*/

.editor {
  padding: 1em;
  font-size: 12pt;
}

/* 
  status
*/

.status {
  padding: 0.5em 0;
  margin-bottom: 1em;
  font-size: 80%;
  background-color: rgb(213, 213, 213);
}

/* .status tr {
  border-top: 1px solid black;
  border-bottom: 1px solid black;
} */

.status td {
  padding: 0.2em 0.5em;
}

.status td:first-child {
  border-right: 1px solid black;
  text-align: right;
}

.status td:last-child {
  text-align: left;
}

.status table,
.status tr,
.status td {
  border-collapse: collapse;
}

/* 
  .program
*/

.program {
  -webkit-user-select: none;
  /* Safari */
  -ms-user-select: none;
  /* IE 10 and IE 11 */
  user-select: none;
  /* Standard syntax */

  /* font-family: 'Iosevka Curly'; */
  font-family: monospace;

  margin-bottom: 1em;
  padding: 0.5em 0;

}

/* 
  .node
*/

.node {
  display: inline;
  cursor: pointer;
  border-radius: 0.5em 0.5em / 0.2em;
}

.node.zero {}

.node.suc {}

.node.lam {}

.node.app {}

.node.ref {}

.node.highlight {
  box-shadow: -2px 0 gray, 2px 0 gray;
}

.node.select-top {
  background-color: rgba(157, 157, 255, 0.5);
  box-shadow: -3px 0 blue, 3px 0 blue;
}

.node.select-bottom {
  background-color: white;
  box-shadow: -3px 0 blue, 3px 0 blue;
}

.node.cursor {
  box-shadow: -3px 0 blue, 3px 0 blue;
}

.subnode.holeExterior-inner {
  padding: 0 0.4em;
  border-radius: 1em 1em / 2em;
  background-color: rgba(255, 139, 50, 0.1);
  box-shadow:
    inset 0 0 0 2px rgb(255, 139, 50),
    0 0 2px 0 black;
}

.subnode.holeInterior-inner {
  padding: 0 0.2em;
  /* box-shadow: inset 0 0 0 2px rgb(255, 139, 50); */
}

/* OLD version, which put an orange cursor around inner hole */
/* .node.holeInterior.cursor {
  box-shadow: -3px 0 orange, 3px 0 orange;
} */

.node.holeInterior.cursor,
.node.holeInterior.highlight,
.node.empty-string.cursor,
.node.empty-string.highlight {
  box-shadow: none;
}

.node.holeInterior.cursor>.subnode.holeInterior-inner>.subnode,
.node.holeInterior.highlight>.subnode.holeInterior-inner>.subnode,
.node.empty-string.cursor>.subnode.empty-string>.subnode,
.node.empty-string.highlight>.subnode.empty-string>.subnode {
  /*  display: none; */
  visibility: hidden
}

.node.holeInterior.cursor>.subnode.holeInterior-inner::before,
.node.holeInterior.highlight>.subnode.holeInterior-inner::before,
.node.empty-string.cursor>.subnode.empty-string::before,
.node.empty-string.highlight>.subnode.empty-string::before {
  display: inline-block;
  width: 0px;
  content: '|';
}

/*
  .subnode
*/

.subnode {
  display: inline;
  border-radius: 1em 1em / 2em;
}

.subnode.s-pred {}

.subnode.lam-bind {}

.subnode.app-apl {}

.subnode.ref-var {}

.subnode.hole-interior {}

.subnode.string-inner {
  white-space: pre;
  color: green;
  /* background-color: rgb(227, 227, 227); */
}

.subnode.string-inner.empty-string {
  color: gray;
  /*
  font-style: italic;
  padding: 0 0.4em;
  border-radius: 1em 1em / 2em;
  background-color: rgba(255, 139, 50, 0.1);
  box-shadow:
    inset 0 0 0 2px rgb(255, 139, 50),
    0 0 2px 0 black;
  */
}

/* 
  .subnode.punctuation
*/

.subnode.punctuation {
  white-space: pre;
}

.subnode.punctuation.lambda {
  margin-right: 0.2em;
}

.subnode.punctuation.mapsto {
  padding: 0 0.5em;
}

.subnode.punctuation.space {
  white-space: pre;
}

.subnode.punctuation.zeroVar {}

.subnode.punctuation.sucVar {}

.subnode.punctuation.interrogative {}

.subnode.punctuation.colon {
  margin: 0 0.4em;
}

.subnode.punctuation.let {
  margin-right: 0.4em;
}

.subnode.punctuation.equals {
  margin: 0 0.4em;
}

.subnode.punctuation.inLet {
  margin: 0 0.4em;
}

.subnode.punctuation.turnstile {
  margin: 0 0.4em;
}

.subnode.punctuation.arrow {
  margin: 0 0.4em;
}

.app-circle {
  display: inline;
  cursor: pointer;
  border-radius: 0.5em 0.5em / 0.2em;
  color: lightgrey;
  font-size: 10px;
}

.subnode.punctuation.circle {
  display: inline-block;
  position: relative;
  top: -2px;
}

/* 
  .subnode.buffer
*/

.subnode.buffer {
  display: inline;
  position: relative;
}

.subnode.buffer>.buffer-inner {
  position: absolute;
  left: 0;
  top: 2em;

  box-shadow: 0 0 0 1px black;
  border-radius: 0.2em;
}

.buffer-results {
  background-color: white;
}

.subnode.buffer>.buffer-inner>.buffer-results>.buffer-result {
  /* min-width: 200px; */
  white-space: nowrap;
  overflow: hidden;
  padding: 0.2em;
}

.subnode.buffer>.buffer-inner>.buffer-results>.buffer-result.buffer-focus {
  background-color: rgb(98, 98, 245, 0.25);
}

.subnode.buffer>.buffer-inner>.buffer-input {
  outline: none;
}

/* placeholder-cursor */

.node.placeholderCursor {}

.node.placeholderCursor>.subnode.placeholderCursor-inner {
  padding: 0 0.4em;
  border-radius: 1em 1em / 2em;
  background-color: rgba(255, 139, 50, 0.1);
  box-shadow:
    0 0 0 2px blue,
    /* inset 0 0 2px 2px black; */
    inset 0 0 2px 1px black;
}

/* preview */

.preview {
  /* display: inline-block; */
  border-radius: 1em 1em / 2em;
  background-color: rgba(0, 234, 179, 0.379);
}

.preview.wrap.before {
  margin-right: 0.1em;
}

.preview.wrap.before:after {
  border-radius: 1em 1em / 2em;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  position: relative;
  display: inline-block;
  content: 'X';

  background-color: white;
  color: white;
}

.preview.wrap.after {
  margin-left: 0.1em;
}

.preview.wrap.after:before {
  border-radius: 1em 1em / 2em;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  position: relative;
  display: inline-block;
  content: 'X';

  background-color: white;
  color: white;
}

.preview.fill+.subnode,
.preview.replace+.subnode {
  /* border: 2px solid black; */
  display: none;
}


/* comment */

.commentBegin,
.commentEnd,
.commentBegin+.node>.subnode.string-inner {
  font-style: italic;
  color: gray !important;
}

/* small-step */

.smallstep-program {
  background-color: rgba(166, 0, 255, 0.105);
}

.node.smallstep {}

.node.smallstep.hole {
  padding: 0 0.4em;
  border-radius: 1em 1em / 2em;
  box-shadow:
    inset 0 0 0 2px rgb(255, 139, 50),
    0 0 2px 0 black;
  box-shadow:
    inset 0 0 0 2px rgb(255, 139, 50),
    0 0 2px 0 black;
}

.node.smallstep.string {}

.node.smallstep.cursor {}

.node.smallstep.boundary {}

.subnode.smallstep.changeDirection {}

.subnode.smallstep.sortChange {}

/* 
console
*/

.console {
  position: fixed;
  bottom: 0;
  padding: 0 0.5em;
  margin-bottom: 1em;
  width: calc(100vw - 3em);
  font-size: 80%;
  background-color: rgb(213, 213, 213);
}

.console-header {
  padding-top: 0.5em;
}

.console-controls {
  padding: 0.5em 0;
}

.console-controls button {
  margin-right: 1em;
  font-size: inherit;
  border: none;
  outline: none;
  background-color: black;
  color: white;
}

.console-logs {
  max-height: 20em;
  ;
  overflow-y: scroll;
}

.console-log {
  padding: 0.5em 0;
  box-shadow: 0 -1px 0 0 black;
}


/*Stuff added by Jacob, feel free to tell me how to reorganize this*/
.hidden {
  display: none
}

.vertical-bar {
  width: .1em;
  background-color: black;
  height: 100%;
  float: right;
}

.horizontal-bar {
  height: .1em;
  background-color: black;
}

.horizontal-container {
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: row;
}

.vertical-container {
  height: 100%;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
}

.fill-space {
  flex-grow: 1
}

.padded {
  padding: .6em
}

.typesubscript {
  color: gray;
  font-size: 14px;
}

.fill-right-space {
  background-color: orange;
  display: inline-block;
  width: 20px;
  height: 1em;
  cursor: pointer;
  border-radius: 0.5em 0.5em / 0.2em;
}

.newline-symbol {
  display: inline;
  border-radius: 0.5em 0.5em / 0.2em;
  color: lightgrey;
}

.error {
  border-bottom: 1px solid red;
  display: inline-block;
}

.grey {
  /* color: lightgrey !important; */
  /*The problem with this was that int literals were green anyway, overriding this.*/
  opacity: 75%;
}

.inline {
  display: inline;
}

.marked {
  /*Used for the Tutorial marking terms*/
  background-color: yellow;
}

.square {
  line-height: 12px;
}