/*  html */

html,
body {
  margin: 0;
  padding: 0;
}

/* GlobalMessage */

.GlobalMessages {
  display: flex;
  /* flex-direction: column; */
  flex-direction: column-reverse;
  gap: var(--it);
  width: calc(100% - 2*var(--it));
  padding: var(--it);
}

.GlobalMessage {
  display: flex;
  flex-direction: row;
  width: 100%;
}

.GlobalMessageTag {
  padding: 0 var(--it);
  height: fit-content;
  background-color: black;
  color: white;
  /* font-weight: bold; */
}

.DebugGlobalMessageTag {
  color: var(--debug-color);
}

.ErrorGlobalMessageTag {
  color: var(--error-color);
}
.ErrorGlobalMessageTag +  .GlobalMessageContent {
  /* box-shadow: 0 0 0 1px var(--error-color); */
  background-color: rgb(255, 230, 230);
}

.InfoGlobalMessageTag {
  color: var(--info-color);
}

.GlobalMessageContent {
  flex-grow: 1;
  padding: 0 var(--it);
  box-shadow: -1px 0 0 0 black;
  width: 100%;
}

.GlobalMessageRecordKey {
  display: inline-block;
  margin-right: var(--it);
  background-color: rgb(204, 204, 204);
  color: black;
  padding: 0 var(--it);
  font-size: 80%;
  font-weight: bold;
}

/* Expr */

.Expr {
  display: inline;
  white-space: pre;
  cursor: pointer;
  user-select: none;
}

.Expr>* {
  /* vertical-align: middle; */
  /* line-height: normal; */
}

.Expr.beginsLine::before {
  /* content: '$' */
}

.Expr.validCursor::before {
  content: "*";
}

.ArrangeHtml {
  display: inline;
}

.Punctuation {
  display: inline;
  white-space: pre;
}

.Whitespace {
  display: inline;
  color: rgba(0, 0, 0, 0);
  white-space: pre;
}

.Expr:hover>.ArrangeHtml>.Whitespace,
.Expr.OutsideCursor>.ArrangeHtml>.Whitespace,
.Expr.InsideCursor>.ArrangeHtml>.Whitespace,
.Expr.OutsideSelect .Whitespace {
  color: gray;
}

.Expr.InsideSelect .Whitespace {
  color: rgba(0, 0, 0, 0);
}

.Expr.Hover {
  box-shadow: -2px 0 0 0 var(--hover-border-color), 2px 0 0 0 var(--hover-border-color);
}

.Expr.OutsideCursor,
.Expr.OutsideCursor.Hover {
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color), 2px 0 0 0 var(--cursor-border-color);
}

.Expr.InsideCursor,
.Expr.InsideCursor.Hover {
  border-radius: calc(0.5 * var(--it));
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

.Expr.Hover {
  background-color: var(--hover-background-color);
}

.Expr.OutsideSelect {
  background-color: var(--select-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

.Expr.InsideSelect {
  background-color: white;
  box-shadow: -2px 0 0 0 var(--cursor-border-color) inset, 2px 0 0 0 var(--cursor-border-color) inset;
}

/* Toolbox */

.Toolbox {
  display: inline-block;
  position: relative;
}

.ToolboxInterior {
  position: absolute;
  top: 1.2em;
  background-color: rgb(217, 217, 217);
}

.ToolboxInput {
  padding: var(--it);
  font-size: 16px;
  border: none;
  outline: none;
  border-radius: 0;
  background-color: rgb(217, 217, 217);
}

.EditRows {}

.EditRow {}

.EditRow.SelectedEditRow {
  background-color: rgb(211, 255, 209);
}

.Edit {
  padding: var(--it);
}

.EditHole {
  display: inline-block;
  box-shadow: 0 0 0 2px var(--cursor-border-color) inset;
  background-color: rgb(225, 225, 225);
  min-width: calc(2*var(--it));
}

.ToolboxExpr {}

.AdjacentEditClasp {
  display: inline-block;
  background-color: rgb(225, 225, 225);
}

/* Preview */

.Preview {
  display: inline;
  background-color: rgb(211, 255, 209);
}

.PreviewLeft {}

.PreviewLeftInsert {}

.PreviewLeftPaste {}

.PreviewRight {}


.PreviewRightInsert {}

.PreviewRightPaste {}

.PreviewLeftPaste+.Expr {
  background-color: rgb(255, 165, 165);
}

/* Sort */

.Sort {
  display: inline;
}

.Sort:hover {
  box-shadow: 0 0 0 4px var(--hover-border-color);
}

.VarSN {
  display: inline;
}

.VarRuleSortNode {
  display: inline;
}

.SortTooth {
  display: inline;
}

.SortChange {
  display: inline;
}

.Change {
  display: inline;
}

.ShiftChange {
  background-color: rgb(239, 156, 0);
  /* padding: 0 calc(0.5*var(--it)); */
  padding: calc(0.5*var(--it)) calc(0.5*var(--it));
}

.ShiftChangeInner {
  display: inline;
  background-color: white;
  padding: 0 calc(0.5*var(--it));
}

.ReplaceChangeLeft {
  display: inline;
}

.ReplaceChangeRight {
  display: inline;
}

.InjectChange {}


/* StepExpr */

.StepExpr {
  /* display: inline; */
  display: inline-block;
}

.StepExprBoundaryInfo {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--boundary-color); */
  border: var(--it) solid var(--boundary-color);
}

.StepExprBoundary {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--boundary-color); */
  border: var(--it) solid var(--boundary-color);
  padding: 0 calc(0.5*var(--it));
}

.StepExprBoundaryDirection {
  /* display: inline; */
  display: inline-block;
  padding: 0 calc(0.5*var(--it));
  background-color: black;
  color: white;
}

.StepExprBoundaryChange {
  /* display: inline; */
  display: inline-block;
  padding: 0 var(--it);
}

.StepExprMarker {
  /* display: inline; */
  display: inline-block;
  /* box-shadow: 0 0 0 4px var(--cursor-border-color); */
  border: var(--it) solid var(--cursor-border-color);
}

.StepExprBoundaryInfo:hover,
.StepExprBoundaryInfo:hover+.StepExprBoundary,
.StepExpr:hover {
  /* box-shadow: 0 0 0 4px var(--hover-border-color); */
  border: var(--it) solid var(--hover-border-color);
}

/* SortingRule */

.SortingRule {
  display: inline;
}

.SortingRuleParameters {
  display: block;
  padding: var(--it);
  background-color: rgb(206, 206, 206);
}

.SortingRuleKids {
  display: inline;
}

.SortingRuleParent {
  display: inline;
}

.RuleSortVar {
  display: inline;
}

/* Html */

.Hole {
  color: gray;
  padding: 0 calc(0.5*var(--it));
}

.Inline {
  display: inline;
}

.Block {
  margin-bottom: var(--it);
}

.Button {
  display: inline-block;
  padding: 0 calc(0.5*var(--it));
  user-select: none;
  cursor: pointer;

  color: var(--color2);
  box-shadow: 0 0 0 1px var(--color2);
  background-color: black;
}

.Button:hover {
  color: black;
  box-shadow: 0 0 0 1px black;
  background-color: var(--color2);
}

.Bug {
  background-color: var(--error-color);
  color: white;
  display: inline;
  padding: 0 var(--it);
  margin-right: var(--it);
}

.Matrix tr {}

.Matrix td {
  padding: calc(0.5*var(--it));
}