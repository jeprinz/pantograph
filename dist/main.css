/* 
  fonts
*/

/* @font-face {
  font-family: 'Iosevka Curly';
  src: url(./assets/fonts/iosevka-curly.ttc) format('truetype');
} */

/* @font-face {
  font-family: 'FiraCode';
  src: url(./assets/fonts/FiraCode-Regular.ttf) format('truetype');
} */

/* variables */

:root {
  /* colors */
  --color1: #2AEDFF;
  --color2: #cf6d27;
  --color3: #eed69b;

  --debug-color: rgb(0, 196, 0);

  --cursor-background-color: rgb(240, 240, 255);
  --cursor-border-color: rgb(0, 0, 255);

  --select-background-color: rgb(202, 202, 255);

  --hover-background-color: rgb(250, 238, 255);
  --hover-border-color: rgb(179, 0, 255);

  --it: 0.6em;
}

/*  html */

html,
body {
  margin: 0;
  padding: 0;
}

/* Panel */

.Panel {
  flex-grow: 1;
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;

  box-shadow: 0 0 0 1px black;
  background-color: white;
}

.PanelHeader {
  padding: var(--it);
  width: calc(100% - 2*var(--it));

  display: flex;
  flex-direction: row;
  gap: var(--it);
  justify-content: space-between;

  color: var(--color3);
  border-bottom: var(--it) solid var(--color2);
  background-color: black;
}

.PanelHeaderInfo {
  display: flex;
  flex-direction: row;
  gap: var(--it);
}

/* .PanelHeaderInfo>* {
  display: inline-block;
} */

.PanelHeaderInfo>.title {
  color: var(--color1);
  padding: 0 var(--it);
  box-shadow:
    -4px 0 0 0 var(--color1) inset,
    -8px 0 0 0 var(--color2) inset,
    4px 0 0 0 var(--color1) inset,
    8px 0 0 0 var(--color2) inset;
  font-weight: bold;
}

.PanelHeaderInfo>.subtitle {
  color: var(--color2);
  font-weight: bold;
}

.PanelHeaderControl {
  display: flex;
  flex-direction: row;
  gap: var(--it);
}

.PanelHeaderControl>.button {
  padding: 0 calc(0.5*var(--it));
  user-select: none;
  cursor: pointer;

  color: var(--color2);
  box-shadow: 0 0 0 1px var(--color2);
  background-color: black;
}

.PanelHeaderControl>.button:hover {
  color: black;
  box-shadow: 0 0 0 1px black;
  background-color: var(--color2);
}

.PanelContent {
  width: 100%;
  height: 100%;
  flex-grow: 1;
}

.PanelContentInterior {
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;
}


/* EditorPanel */

.EditorPanel {
  width: 100vw;
  height: 100vh;

  font-family: 'Courier New', Courier, monospace;
}

.EditorPanel>.PanelContent {}

.EditorPanel>.PanelContent>.PanelContentInterior {}

/* Buffer */

.BufferPanel {
  flex-grow: 1;
}

.BufferPanel>.PanelContent {
  overflow: scroll;
}

.BufferPanel>.PanelContent>.PanelContentInterior {}

.BufferPanel>.PanelContent>.PanelContentInterior>.program {
  padding: var(--it);
  line-height: 1.1em;
}

/* TerminalPanel */

.TerminalPanel {
  flex-grow: 0;
  height: auto;
}

.TerminalPanel>.PanelContent {
  height: auto;
  max-height: 40vw;
  overflow: scroll;
}

.TerminalContent {}

.TerminalContent.closed {
  display: none;
}

.TerminalInput {
  display: block;
  width: calc(100vw - 2*var(--it));
  padding: var(--it);
}

.TerminalInput>input {
  display: block;
  padding: 0;
  margin: 0;
  border: none;
  border-radius: 0;
  user-select: none;
  box-shadow: 0 0 0 1px black;
  width: 100%;
}

.TerminalItems {
  display: flex;
  flex-direction: column;
  gap: var(--it);
  width: calc(100% - 2*var(--it));
  padding: var(--it);
}

.TerminalItem {
  display: flex;
  flex-direction: row;
  gap: var(--it);
  width: 100%;
}

.TerminalItemTag {
  padding: 0 var(--it);
  height: fit-content;
  background-color: black;
  box-shadow: 0 0 0 1px black;
  color: white;
  font-weight: bold;
}

.DebugTerminalItemTag {
  color: var(--debug-color);
  /* box-shadow: 0 0 0 1px var(--debug-color); */
}

.TerminalItemContent {
  padding: 0 var(--it);
  box-shadow: 0 0 0 1px black;
  width: 100%;
}


/* Expr */

.Expr {
  display: inline;
  white-space: pre;
  cursor: pointer;
  user-select: none;
}

.Expr.hover {
  background-color: var(--hover-background-color);
  box-shadow: -2px 0 0 0 var(--hover-border-color), 2px 0 0 0 var(--hover-border-color);
}

.Expr>.HtmlArrangeKid {
  display: inline-block;
}

.newline-header {
  color: rgba(0, 0, 0, 0);
}

.Expr.hover>.newline-header {
  color: gray;
}

.Expr.AtCursor>.newline-header {
  color: gray;
}

/* RootGyro */
.Expr.InsideRoot {}

/* CursorGyro */

.Expr.OutsideCursor {}

.Expr.AtCursor,
.Expr.AtCursor.hover {
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color), 2px 0 0 0 var(--cursor-border-color);
}

/* SelectGyro */

.Expr.OutsideSelect {}

.Expr.AtOutsideSelect {
  background-color: var(--select-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color), 2px 0 0 0 var(--cursor-border-color);
}

.Expr.MiddleSelect {}

.Expr.AtInsideSelect {
  background-color: white;
  box-shadow: -2px 0 0 0 var(--cursor-border-color), 2px 0 0 0 var(--cursor-border-color);
}

.Expr.InsideSelect {}

/* Toolbox */

.Toolbox {
  display: inline-block;
  position: relative;
}

.ToolboxInterior {
  position: absolute;
  top: 1.2em;
  background-color: white;
  box-shadow: 0 0 0 1px black;
}

.ToolboxItems {}

.ToolboxItemsRow {}

.ToolboxItemRow.SelectedToolboxItemRow {
  background-color: rgb(209, 209, 255);
}

.ToolboxItem {}

/* Preview */

.Preview {
  display: inline-block;
}

.PreviewLeft {}

.PreviewRight {}