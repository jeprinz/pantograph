/* 
  fonts
*/

/* @font-face {
  font-family: 'Iosevka Curly';
  src: url(./assets/fonts/iosevka-curly.ttc) format('truetype');
} */

/* @font-face {
  font-family: 'FiraCode';
  src: url(./assets/fonts/FiraCode-Regular.ttf) format('truetype');
} */

/* variables */

:root {
  /* colors */
  --accent1-color: rgb(42, 237, 255);
  --accent2-color: rgb(252, 93, 25);

  --debug-color: rgb(0, 200, 0);

  --cursor-background-color: rgb(240, 240, 255);
  --cursor-border-color: rgb(0, 0, 255);

  --hover-background-color: rgb(250, 238, 255);
  --hover-border-color: rgb(179, 0, 255);
}

/*  html */

html,
body {
  margin: 0;
  padding: 0;
}

/* Panel */

.Panel {
  box-shadow: 0 0 0 1px black;
  background-color: white;
}

.PanelHeader {
  display: flex;
  flex-direction: row;
  gap: 1em;
  padding: 0.4em;
  color: white;
  border-bottom: 0.4em solid var(--accent2-color);
  background-color: black;
}

.PanelContent {
  overflow-y: scroll;
}

.PanelContentInterior {
  padding: 0.4em;
}

.PanelHeader .title {
  color: var(--accent1-color);
  /* border: 1px solid var(--accent1-color); */
  padding: 0 0.6em;
  box-shadow:
    -4px 0 0 0 var(--accent1-color) inset,
    -8px 0 0 0 var(--accent2-color) inset,
    4px 0 0 0 var(--accent1-color) inset,
    8px 0 0 0 var(--accent2-color) inset;
}

.PanelHeader .info {
  display: inline-block;
  color: var(--accent1-color);
}

/* EditorPanel */

.EditorPanel {
  font-family: 'Courier New', Courier, monospace;
  height: 100vh;
}

/* Buffer */

.BufferPanel {}

.BufferPanel>.PanelContent {
  overflow: scroll;
  height: calc(100vh - 10em);
  max-width: calc(100vw - 1em);
}

.BufferPanel>.PanelContent>.PanelContentInterior {
  margin-bottom: 4em;
  margin-top: 4em;
}

/* TerminalPanel */

.TerminalPanel {
  display: flex;
  flex-direction: column;

  position: absolute;
  bottom: 0;
  width: calc(100vw - 2*0.4em);
}

.TerminalPanel>.PanelContent{
  overflow: scroll;
  max-height: 40vh;
}

.TerminalItems {
  display: flex;
  flex-direction: column;
  gap: 0.4em;
  
  /* padding: 1px; */
  /* background-color: rgb(194, 194, 194); */
  /* max-height: 40vh; */
  /* overflow: scroll; */
}

.TerminalItem {
  display: flex;
  flex-direction: row;
  gap: 0.4em;
}

.TerminalItemTag {
  padding: 0 0.4em;
  height: 100%;
  background-color: black;
  color: white;
}

.DebugTerminalItemTag {
  color: var(--debug-color);
  /* box-shadow: 0 0 0 1px var(--debug-color); */
}

.TerminalItemContent {
  padding: 0 0.4em;
  box-shadow: 0 0 0 1px black;
  width: 100%;
}

/* UI */

.button {
  padding: 0 0.5em;
  color: var(--accent1-color);
  box-shadow: 0 0 0 1px var(--accent1-color);
  background-color: black;
  user-select: none;
  cursor: pointer;
}

/* Expr */

.Expr {
  display: inline;
  white-space: pre;
  cursor: pointer;
  user-select: none;
}

.Expr.hover {
  background-color: var(--hover-background-color);
  box-shadow: -2px 0 0 0 var(--hover-border-color), 2px 0 0 0 var(--hover-border-color);
}

.newline-header {
  color: rgba(0, 0, 0, 0);
}

.Expr.hover>.newline-header {
  color: gray;
}

.Expr.AtCursor>.newline-header {
  color: gray;
}

/* RootGyro */
.Expr.InsideRoot {}

/* CursorGyro */

.Expr.OutsideCursor {}

.Expr.AtCursor,
.Expr.AtCursor.hover {
  background-color: var(--cursor-background-color);
  box-shadow: -2px 0 0 0 var(--cursor-border-color), 2px 0 0 0 var(--cursor-border-color);
}

.Expr.InsideCursor {}

/* SelectGyro */

.Expr.OutsideSelect {}

.Expr.AtOutsideSelect {}

.Expr.BetweenSelect {}

.Expr.AtInsideSelect {}

.Expr.InsideSelect {}

/* Toolbox */

.Toolbox {
  display: inline-block;
  position: relative;
}

.ToolboxInterior {
  position: absolute;
  top: 1.2em;
  background-color: white;
  box-shadow: 0 0 0 1px black;
}

.ToolboxItems {}

.ToolboxItemsRow {}

.ToolboxItemRow.SelectedToolboxItemRow {
  background-color: rgb(209, 209, 255);
}

.ToolboxItem {}

/* Preview */

.Preview {
  display: inline-block;
}

.PreviewLeft {}

.PreviewRight {}